services:
  download:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/data_acquisition/download_kaggle.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
    tty: true

  etl:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/data_acquisition/etl.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
    tty: true

  preprocess:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/preprocessing/main.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
    tty: true

  visualization:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/visualization/main.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
      - ./images:/app/images
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
      - OUTPUTS_PATH=/app/images
      - MAX_ROWS=3000 # Número máximo de filas a procesar por lote. Ajusta este valor según la memoria disponible del contenedor o del equipo host.
    tty: true

  training_prep:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/training/prepare.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
    tty: true

  modeling_baseline:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/training/train_baseline.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
      - OUTPUT_DIR=/app/artifacts
    tty: true

  modeling_cnn:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/training/train_cnn.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
      - OUTPUT_DIR=/app/artifacts
    tty: true

  modeling_compare:
    user: root
    build: .
    entrypoint: ["python3", "/app/scripts/training/model_comparison.py"]
    volumes:
      - ./src/Pneumonia_Detection/database:/app/src/Pneumonia_Detection/database
      - ./artifacts:/app/artifacts
    environment:
      - BASE_ETL_PATH=/app/src/Pneumonia_Detection/database
      - OUTPUT_DIR=/app/artifacts
    tty: true

  deploy:
    user: root
    build: .
    command: ["python3", "/app/scripts/deploy/deploy.py"]
    ports:
      - "8000:8000"
    volumes:
      - ./artifacts:/app/artifacts
      - ./src:/app/src
    environment:
      - PYTHONPATH=/app/src
      - MODEL_PATH=/app/artifacts/models/CNN/v2.h5
    tty: true

